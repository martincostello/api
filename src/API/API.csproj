<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <ContainerFamily>noble-chiseled</ContainerFamily>
    <ContainerRepository>martincostello/api</ContainerRepository>
    <Description>Martin Costello's API</Description>
    <EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>
    <EnableRequestDelegateGenerator>true</EnableRequestDelegateGenerator>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <InvariantGlobalization>true</InvariantGlobalization>
    <OpenApiDocumentsDirectory>$([System.IO.Path]::Combine($(ArtifactsPath), 'openapi'))</OpenApiDocumentsDirectory>
    <OpenApiGenerateDocuments>true</OpenApiGenerateDocuments>
    <OutputType>Exe</OutputType>
    <PublishAot>true</PublishAot>
    <PublishSelfContained>true</PublishSelfContained>
    <RootNamespace>MartinCostello.Api</RootNamespace>
    <TargetFramework>net9.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>latest</TypeScriptToolsVersion>
    <UserSecretsId>api.martincostello.com</UserSecretsId>
  </PropertyGroup>
  <ItemGroup>
    <ContainerPort Include="8080" Type="tcp" />
    <Content Update="appsettings.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Azure.Monitor.OpenTelemetry.Exporter" />
    <PackageReference Include="MartinCostello.OpenApi.Extensions" />
    <PackageReference Include="Microsoft.AspNetCore.AzureAppServices.HostingStartup" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.Extensions.ApiDescription.Server" NoWarn="RT0003" PrivateAssets="all" />
    <PackageReference Include="Microsoft.OpenApi" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Process" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" />
    <PackageReference Include="OpenTelemetry.Resources.Azure" />
    <PackageReference Include="OpenTelemetry.Resources.Container" />
    <PackageReference Include="OpenTelemetry.Resources.OperatingSystem" />
    <PackageReference Include="OpenTelemetry.Resources.ProcessRuntime" />
    <PackageReference Include="Pyroscope.OpenTelemetry" />
    <PackageReference Include="RazorSlices" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="coverage\**;package.json;package-lock.json;tsconfig.json" CopyToPublishDirectory="Never" />
    <None Remove="assets\scripts\**\*.ts" />
    <TypeScriptCompile Include="assets\scripts\**\*.ts" />
  </ItemGroup>
  <Target Name="BundleAssets" BeforeTargets="BeforeBuild" DependsOnTargets="RestoreNpmPackages">
    <Exec Command="npm run build" Condition=" !Exists('$(MSBuildThisFileDirectory)\wwwroot\assets\js\main.js') " />
  </Target>
  <Target Name="AddGeneratedContentItems" BeforeTargets="AssignTargetPaths" Condition=" '$(CI)' != '' ">
    <ItemGroup>
      <Content Include="wwwroot/**" CopyToPublishDirectory="PreserveNewest" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);@(Content)" />
    </ItemGroup>
  </Target>
  <Target Name="AddPyroscope" BeforeTargets="AssignTargetPaths" Condition=" '$(EnablePyroscope)' == 'true' ">
    <ItemGroup>
      <Content Include="$(MSBuildThisFileDirectory)/../../.pyroscope/**/*" CopyToPublishDirectory="IfDifferent" />
    </ItemGroup>
  </Target>
  <ItemGroup Condition=" '$(EnablePyroscope)' == 'true' ">
    <ContainerEnvironmentVariable Include="CORECLR_ENABLE_PROFILING" Value="1" />
    <ContainerEnvironmentVariable Include="CORECLR_PROFILER" Value="{BD1A650D-AC5D-4896-B64F-D6FA25D6B26A}" />
    <ContainerEnvironmentVariable Include="CORECLR_PROFILER_PATH" Value="Pyroscope.Profiler.Native.so" />
    <ContainerEnvironmentVariable Include="LD_PRELOAD" Value="Pyroscope.Linux.ApiWrapper.x64.so" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_APPLICATION_NAME" Value="api.martincostello.com" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_LABELS" Value="api" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_ENABLED" Value="1" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_ALLOCATION_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_CONTENTION_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_CPU_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_EXCEPTION_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_HEAP_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_LOCK_ENABLED" Value="true" />
    <ContainerEnvironmentVariable Include="PYROSCOPE_PROFILING_WALLTIME_ENABLED" Value="true" />
  </ItemGroup>
</Project>
