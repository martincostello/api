name: build

on:
  push:
    branches: [ main ]
    paths-ignore:
    - '**/*.md'
    - '**/*.gitignore'
    - '**/*.gitattributes'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: apimartincostello-uksouth
  AZURE_WEBAPP_PACKAGE_PATH: ./artifacts/publish
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip
  WEBSITE_URL_PROD: https://api.martincostello.com

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        include:
          - os: macos-latest
            codecov_os: macos
          - os: ubuntu-latest
            codecov_os: linux
          - os: windows-latest
            codecov_os: windows

    steps:

    - name: Checkout code
      uses: actions/checkout@v2.3.4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1.8.1

    - name: Build, test and publish
      shell: pwsh
      run: ./build.ps1

    - uses: codecov/codecov-action@v2.1.0
      name: Upload coverage to Codecov
      with:
        file: ./artifacts/coverage.cobertura.xml
        flags: ${{ matrix.codecov_os }}

    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      if: ${{ runner.os == 'Windows' }}
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: deploy-production
    needs: build
    runs-on: windows-latest
    concurrency: production_environment
    environment:
      name: production
      url: ${{ env.WEBSITE_URL_PROD }}

    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: webapp

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2.2.3
      id: deploy_production
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}

  test:
    name: test-production
    needs: deploy
    runs-on: windows-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2.3.4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1.8.1

    - name: Run end-to-end tests
      shell: pwsh
      run: dotnet test ./tests/API.Tests --filter Category=EndToEnd /p:CollectCoverage=false
      env:
        WEBSITE_URL: ${{ env.WEBSITE_URL_PROD }}
